package com.example.demo.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RechargeRecordExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	public RechargeRecordExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andRecordIdIsNull() {
			addCriterion("record_id is null");
			return (Criteria) this;
		}

		public Criteria andRecordIdIsNotNull() {
			addCriterion("record_id is not null");
			return (Criteria) this;
		}

		public Criteria andRecordIdEqualTo(String value) {
			addCriterion("record_id =", value, "recordId");
			return (Criteria) this;
		}

		public Criteria andRecordIdNotEqualTo(String value) {
			addCriterion("record_id <>", value, "recordId");
			return (Criteria) this;
		}

		public Criteria andRecordIdGreaterThan(String value) {
			addCriterion("record_id >", value, "recordId");
			return (Criteria) this;
		}

		public Criteria andRecordIdGreaterThanOrEqualTo(String value) {
			addCriterion("record_id >=", value, "recordId");
			return (Criteria) this;
		}

		public Criteria andRecordIdLessThan(String value) {
			addCriterion("record_id <", value, "recordId");
			return (Criteria) this;
		}

		public Criteria andRecordIdLessThanOrEqualTo(String value) {
			addCriterion("record_id <=", value, "recordId");
			return (Criteria) this;
		}

		public Criteria andRecordIdLike(String value) {
			addCriterion("record_id like", value, "recordId");
			return (Criteria) this;
		}

		public Criteria andRecordIdNotLike(String value) {
			addCriterion("record_id not like", value, "recordId");
			return (Criteria) this;
		}

		public Criteria andRecordIdIn(List<String> values) {
			addCriterion("record_id in", values, "recordId");
			return (Criteria) this;
		}

		public Criteria andRecordIdNotIn(List<String> values) {
			addCriterion("record_id not in", values, "recordId");
			return (Criteria) this;
		}

		public Criteria andRecordIdBetween(String value1, String value2) {
			addCriterion("record_id between", value1, value2, "recordId");
			return (Criteria) this;
		}

		public Criteria andRecordIdNotBetween(String value1, String value2) {
			addCriterion("record_id not between", value1, value2, "recordId");
			return (Criteria) this;
		}

		public Criteria andRmbIsNull() {
			addCriterion("rmb is null");
			return (Criteria) this;
		}

		public Criteria andRmbIsNotNull() {
			addCriterion("rmb is not null");
			return (Criteria) this;
		}

		public Criteria andRmbEqualTo(BigDecimal value) {
			addCriterion("rmb =", value, "rmb");
			return (Criteria) this;
		}

		public Criteria andRmbNotEqualTo(BigDecimal value) {
			addCriterion("rmb <>", value, "rmb");
			return (Criteria) this;
		}

		public Criteria andRmbGreaterThan(BigDecimal value) {
			addCriterion("rmb >", value, "rmb");
			return (Criteria) this;
		}

		public Criteria andRmbGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("rmb >=", value, "rmb");
			return (Criteria) this;
		}

		public Criteria andRmbLessThan(BigDecimal value) {
			addCriterion("rmb <", value, "rmb");
			return (Criteria) this;
		}

		public Criteria andRmbLessThanOrEqualTo(BigDecimal value) {
			addCriterion("rmb <=", value, "rmb");
			return (Criteria) this;
		}

		public Criteria andRmbIn(List<BigDecimal> values) {
			addCriterion("rmb in", values, "rmb");
			return (Criteria) this;
		}

		public Criteria andRmbNotIn(List<BigDecimal> values) {
			addCriterion("rmb not in", values, "rmb");
			return (Criteria) this;
		}

		public Criteria andRmbBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("rmb between", value1, value2, "rmb");
			return (Criteria) this;
		}

		public Criteria andRmbNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("rmb not between", value1, value2, "rmb");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("create_time =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("create_time <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("create_time >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("create_time >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("create_time <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("create_time <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<Date> values) {
			addCriterion("create_time in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<Date> values) {
			addCriterion("create_time not in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("create_time between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("create_time not between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("status is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("status is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(Integer value) {
			addCriterion("status =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(Integer value) {
			addCriterion("status <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(Integer value) {
			addCriterion("status >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("status >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(Integer value) {
			addCriterion("status <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(Integer value) {
			addCriterion("status <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<Integer> values) {
			addCriterion("status in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<Integer> values) {
			addCriterion("status not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(Integer value1, Integer value2) {
			addCriterion("status between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(Integer value1, Integer value2) {
			addCriterion("status not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("user_id is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("user_id is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(String value) {
			addCriterion("user_id =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(String value) {
			addCriterion("user_id <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(String value) {
			addCriterion("user_id >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(String value) {
			addCriterion("user_id >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(String value) {
			addCriterion("user_id <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(String value) {
			addCriterion("user_id <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLike(String value) {
			addCriterion("user_id like", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotLike(String value) {
			addCriterion("user_id not like", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<String> values) {
			addCriterion("user_id in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<String> values) {
			addCriterion("user_id not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(String value1, String value2) {
			addCriterion("user_id between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(String value1, String value2) {
			addCriterion("user_id not between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andPayWayIsNull() {
			addCriterion("pay_way is null");
			return (Criteria) this;
		}

		public Criteria andPayWayIsNotNull() {
			addCriterion("pay_way is not null");
			return (Criteria) this;
		}

		public Criteria andPayWayEqualTo(Integer value) {
			addCriterion("pay_way =", value, "payWay");
			return (Criteria) this;
		}

		public Criteria andPayWayNotEqualTo(Integer value) {
			addCriterion("pay_way <>", value, "payWay");
			return (Criteria) this;
		}

		public Criteria andPayWayGreaterThan(Integer value) {
			addCriterion("pay_way >", value, "payWay");
			return (Criteria) this;
		}

		public Criteria andPayWayGreaterThanOrEqualTo(Integer value) {
			addCriterion("pay_way >=", value, "payWay");
			return (Criteria) this;
		}

		public Criteria andPayWayLessThan(Integer value) {
			addCriterion("pay_way <", value, "payWay");
			return (Criteria) this;
		}

		public Criteria andPayWayLessThanOrEqualTo(Integer value) {
			addCriterion("pay_way <=", value, "payWay");
			return (Criteria) this;
		}

		public Criteria andPayWayIn(List<Integer> values) {
			addCriterion("pay_way in", values, "payWay");
			return (Criteria) this;
		}

		public Criteria andPayWayNotIn(List<Integer> values) {
			addCriterion("pay_way not in", values, "payWay");
			return (Criteria) this;
		}

		public Criteria andPayWayBetween(Integer value1, Integer value2) {
			addCriterion("pay_way between", value1, value2, "payWay");
			return (Criteria) this;
		}

		public Criteria andPayWayNotBetween(Integer value1, Integer value2) {
			addCriterion("pay_way not between", value1, value2, "payWay");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table recharge_record
	 * @mbg.generated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table recharge_record
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}