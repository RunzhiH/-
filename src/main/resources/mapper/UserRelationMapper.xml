<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.UserRelationMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.UserRelation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="user_relation_id" jdbcType="VARCHAR" property="userRelationId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="share_user_id" jdbcType="VARCHAR" property="shareUserId" />
    <result column="relation_chain" jdbcType="VARCHAR" property="relationChain" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    user_relation_id, user_id, share_user_id, relation_chain
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.UserRelationExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_relation
    where user_relation_id = #{userRelationId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_relation
    where user_relation_id = #{userRelationId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.UserRelationExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.UserRelation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_relation (user_relation_id, user_id, share_user_id, 
      relation_chain)
    values (#{userRelationId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{shareUserId,jdbcType=VARCHAR}, 
      #{relationChain,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.UserRelation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userRelationId != null">
        user_relation_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="shareUserId != null">
        share_user_id,
      </if>
      <if test="relationChain != null">
        relation_chain,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userRelationId != null">
        #{userRelationId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="shareUserId != null">
        #{shareUserId,jdbcType=VARCHAR},
      </if>
      <if test="relationChain != null">
        #{relationChain,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.UserRelationExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from user_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_relation
    <set>
      <if test="record.userRelationId != null">
        user_relation_id = #{record.userRelationId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.shareUserId != null">
        share_user_id = #{record.shareUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.relationChain != null">
        relation_chain = #{record.relationChain,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_relation
    set user_relation_id = #{record.userRelationId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      share_user_id = #{record.shareUserId,jdbcType=VARCHAR},
      relation_chain = #{record.relationChain,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.UserRelation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_relation
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="shareUserId != null">
        share_user_id = #{shareUserId,jdbcType=VARCHAR},
      </if>
      <if test="relationChain != null">
        relation_chain = #{relationChain,jdbcType=VARCHAR},
      </if>
    </set>
    where user_relation_id = #{userRelationId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.UserRelation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_relation
    set user_id = #{userId,jdbcType=VARCHAR},
      share_user_id = #{shareUserId,jdbcType=VARCHAR},
      relation_chain = #{relationChain,jdbcType=VARCHAR}
    where user_relation_id = #{userRelationId,jdbcType=VARCHAR}
  </update>
  <insert id="addUserRelactionWithShareUserId">
  		INSERT INTO user_relation (
		  user_relation_id,
		  user_id,
		  share_user_id,
		  relation_chain
		) 
		SELECT 
		  REPLACE(UUID(), "-", "") user_relation_id,
		  a.user_id,
		  b.user_id,
		  CONCAT(b.relation_chain, b.user_id) relation_chain 
		FROM
		  user_info a,
		  user_info b 
		WHERE a.phone = #{phone} 
		  AND b.user_id = #{share_user_id} 
  </insert>
  <insert id="addUserRelactionWithoutShareUserId">
  		INSERT INTO user_relation (
		  user_relation_id,
		  user_id,
		  share_user_id,
		  relation_chain
		) 
		SELECT 
		  REPLACE(UUID(), "-", "") user_relation_id,
		  a.user_id,
		  '100000' share_user_id,
		  '100000' relation_chain 
		FROM
		  user_info a
		WHERE a.phone = #{phone} 
  </insert>
</mapper>